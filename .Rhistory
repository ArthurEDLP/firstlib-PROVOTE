library(usethis)
elus_data <- readr::read_delim("C:/Users/arthu/OneDrive/Bureau/Master/R avancé/semaine_5_td/elus_sample.csv")
df_Nantes <- subset(elus_data, elus_data$`Libellé de la commune` %in% c("Nantes") & elus_data$`Code de la commune` %in% c(44109))
df_Gers <- subset(elus_data, elus_data$`Libellé du département` %in% c("Gers"))
usethis::use_data(elus_data, overwrite = TRUE)
usethis::use_data(df_Nantes, overwrite = TRUE)
usethis::use_data(df_Gers, overwrite = TRUE)
library(usethis)
#  Instead of documenting the data directly, you document the name of the dataset and save it in R/.
#' Données sur les élus
#'
#' @description
#' Un sous-ensemble de données sur les élus, extraites d'un fichier CSV
#' contenant des informations telles que le nom, l'âge, la profession.
#'
#' @format ## `elus_data`
#' Un data frame avec 16 lignes et 9752 colonnes :
#' \describe{
#'   \item{Code.du.département}{Le nombre attribué à un département}
#'   \item{Libellé du département}{Le nom du département}
#'   \item{Nom de l'élu}{Le nom de l'élu}
#'   \item{Prénom de l'élu}{Le prénom de l'élu}
#'   \item{Code sexe}{M si Masculin et F si Feminin}
#'   \item{Date de naissance}{La date de naissance au format dd/mm/aaaa}
#'   ...
#' }
#' @source Données extraites de "elus_sample.csv"
"elus_data"
#' Données sur les élus de la commune de Nantes
#'
#' @description
#' Un sous-ensemble de données sur les élus de Nantes, extraites d'un fichier CSV
#' contenant des informations telles que le nom, l'âge, la profession. Utilisation pour les exemples.
#'
#' @format ## `df_Nantes`
#' Un data frame avec 16 lignes et 66 colonnes :
#' \describe{
#'   \item{Code.du.département}{Le nombre attribué à un département}
#'   \item{Libellé du département}{Le nom du département}
#'   \item{Nom de l'élu}{Le nom de l'élu}
#'   \item{Prénom de l'élu}{Le prénom de l'élu}
#'   \item{Code sexe}{M si Masculin et F si Feminin}
#'   \item{Date de naissance}{La date de naissance au format dd/mm/aaaa}
#'   ...
#' }
#' @source Données extraites de "elus_data"
"df_Nantes"
#' Données sur les élus du département du Gers
#'
#' @description
#' Un sous-ensemble de données sur les élus du Gers, extraites d'un fichier CSV
#' contenant des informations telles que le nom, l'âge, la profession. Utilisation pour les exemples.
#'
#' @format ## `df_Gers`
#' Un data frame avec 16 lignes et 4932 colonnes :
#' \describe{
#'   \item{Code.du.département}{Le nombre attribué à un département}
#'   \item{Libellé du département}{Le nom du département}
#'   \item{Nom de l'élu}{Le nom de l'élu}
#'   \item{Prénom de l'élu}{Le prénom de l'élu}
#'   \item{Code sexe}{M si Masculin et F si Feminin}
#'   \item{Date de naissance}{La date de naissance au format dd/mm/aaaa}
#'   ...
#' }
#' @source Données extraites de "elus_data"
"df_Gers"
library(testthat)
usethis::use_test("summary_commune")
usethis::use_test("summary_departement")
usethis::use_test("plot_commune")
usethis::use_test("plot_departement")
usethis::use_test("creer_commune")
usethis::use_test("creer_departement")
usethis::use_test("summary_departement")
usethis::use_test("plot_commune")
usethis::use_test("plot_departement")
usethis::use_test("creer_commune")
usethis::use_test("creer_departement")
devtools::document()
?df_Gers
summary(df_Nantes)
library(libraryEDLP)
summary_commune(df_Nantes)
summary_departement(df_Gers)
?generer_rapport()
?generer_rapport
devtools::document()
remotes::install_github("ArthurEDLP/firstlib-PROVOTE")
library(libraryEDLP)
?generer_rapport
generer_rapport(44109, 32, "inst/rapport_test_1.html")
generer_rapport(44109, 32, "inst/rapport_test_1.html")
if (!requireNamespace("quarto", quietly = TRUE)) {
stop("Le package 'quarto' doit être installé.")
}
if (!file.exists("inst/rapport.qmd")) {
stop("Le fichier 'rapport.qmd' est introuvable. Vérifiez son emplacement.")
}
if (!requireNamespace("quarto", quietly = TRUE)) {
stop("Le package 'quarto' doit être installé.")
}
if (!file.exists("inst/rapport.qmd")) {
stop("Le fichier 'rapport.qmd' est introuvable. Vérifiez son emplacement.")
}
library(quarto)
generer_rapport(44109, 32, "inst/rapport_test_1.html")
generer_rapport(44109, 32, "inst")
quarto::quarto_render(input = "inst/mon_rapport.qmd", output_file = "inst/mon_rapport.html")
generer_rapport(44109, 32, "inst/rapport.html")
generer_rapport(44109, 32, "inst")
generer_rapport(44109, 32, "C:/Users/arthu/OneDrive/Bureau/Master/R avancé/LibraryEDLP")
generer_rapport(44109, 32, "inst")
generer_rapport(44109, 32, "inst/rapport")
generer_rapport(44109, 32, "inst/rapport.htlm")
generer_rapport(44109, 32, "R")
generer_rapport(44109, 32)
devtools::document()
devtools::load_all()
ls("package:libraryEDLP")
usethis::use_pkgdown()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
devtools::build_vignettes()
devtools::build_vignettes()
?generer_rapport
generer_rapport(44109, 32, "rapport.html")
library(libraryEDLP)
generer_rapport(44109, 32, "rapport.html")
library(pkgdown)
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
ls docs
library(usethis)
elus_data <- readr::read_delim("C:/Users/arthu/OneDrive/Bureau/Master/R avancé/semaine_5_td/elus_sample.csv")
df_Nantes <- subset(elus_data, elus_data$`Libellé de la commune` %in% c("Nantes") & elus_data$`Code de la commune` %in% c(44109))
df_Gers <- subset(elus_data, elus_data$`Libellé du département` %in% c("Gers"))
usethis::use_data(elus_data, overwrite = TRUE)
usethis::use_data(df_Nantes, overwrite = TRUE)
usethis::use_data(df_Gers, overwrite = TRUE)
devtools::document()
generer_rapport <- function(commune, departement, output) {
quarto::quarto_render(
input = "rapport.qmd",  # Cherche le fichier rapport.qmd
output_format = "html",
output_file = output,  # Spécifie le chemin de sortie
execute_params = list(
"code_commune" = commune,
"code_departement" = departement
)
)
}
library(libraryEDLP)
generer_rapport(44109, 32, "rapport.html")
generer_rapport <- function(commune, departement, output) {
quarto::quarto_render(
input = "R/rapport.qmd",  # Cherche le fichier rapport.qmd
output_format = "html",
output_file = output,  # Spécifie le chemin de sortie
execute_params = list(
"code_commune" = commune,
"code_departement" = departement
)
)
}
library(libraryEDLP)
generer_rapport(44109, 32, "rapport.html")
usethis::use_vignette()
usethis::use_vignette("Générer un rapport d'analyses")
usethis::use_vignette("Genere_rapport_d_analyses")
library(pkgdown)
usethis::use_pkgdown_github_pages()
devtools::document()
library(libraryEDLP)
generer_rapport(44109, 32, "rapport.html")
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
pkgdown::clean_site()
pkgdown::build_site()
